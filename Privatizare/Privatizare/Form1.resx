<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="backgroundWorker1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="richTextBox2.Text" xml:space="preserve">
    <value>Joc de societate extrem de atractiv atat pentru tineri de varsta scolara cat si pentru adulti. Prin acest joc se urmareste dezvoltarea interesului pentru libera initiativa spre sectorul particular in multiple domenii de activitate.
Se joaca in 3 insi.
Se pleaca de la START si se inainteaza pe traseu in sensul invers acelor de ceasornic conform numarului indicat de zaruri. In locul unde s-a orit pionul se procedeaza dupa cum rezulta in continuare. Majoritatea casutelor jocului reprezinta diferite firme si jucatorul poate consulta actiunile proprietatii, corespunzator casutei in care s-a oprit, actiuni care sunt pastrate la banca. Daca convine actiunea respectiva, atunci se poate cumpara achitand bancii valoarea inscrisa pe actiune.
De fiecare data cand se opreste la locul respectiv, poate cumpara o actiune. Fiecare jucator isi face socotelile in asa fel ca sa nu cumpere prea multe actiuni deoarece trebuie sa pastreze monetar pentru plata unor taxe sau profituri jucatorilor adversi atunci cand pionul sau intra in casute care sunt cumparate si detin actiunile lor jucatorii respectivi. Fiecare jucator trebuie sa fie atent ca sa ceara la timp aceste sume. Nu se admite vanzare sau cumparare intre jucatori, aceasta se face numai de catre banca. Jocul se termina cand fie un jucator, fie banca, da faliment, iar jucatorul cu cei mai multi bani invinge, declarandu-se cel mai bun manager.
Monetarul folosit poarta denumirea ECU simbolizand unitatea monetara europeana internationala. Valorile unor obiective si a unor actiuni sunt simbolice, ele nu pastreaza proportiile reale de valori. Jucatorul care detine si banca este totodata si arbitrul unic al jocului.
Monetarul existent se imparte uniform pentru cei 3 jucatori.
Casutele ovale cu inscriptia "BANCA" servesc pentru achitarea de catre banca a sumei de 500 ECU dobandita suplimentara jucatorului respectiv.
Casutele "LOTO" inseamna ca jucatorul va trace un cartonas rosu si se procedeaza conform cu cele inscrise pe acesta.
Cine ajunge la "Casa de odihna", iese de doua ori din joc.
Toate platile se vor efectua de la sau catre banca.
Dupa fiecare circuit parcurs, banca plateste jucatorilor 3000 ECU in vederae stimularii investitiilor.
Alte precizari:
Cand intra in casuta cu inscriptia "Banca achita 2000 ECU dividende" va primi de la banca suma respectiva.
Cine ajunge in "Sala de consfatuiri" va plati o taxa pentru informatii si consulting de 1000 ECU da banca.
Daca jucatorul trebuie sa achite sume unei societati a carei actiune nu este cumparata de nici un jucator, aceasta suma se va plati bancii.
De fiecare data jucatorul intrat in casuta ocupata de alt jucator, va plati taxe dupa toate actiunile detinute de acesta.</value>
  </data>
</root>